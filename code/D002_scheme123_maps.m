filepath1 = "/projectnb/amazondr/data10/cliveg/zpzuo/paper2_intermediate_data/ImagePerTrait_1000samples/";
filepath2 = "/projectnb/amazondr/data10/cliveg/zpzuo/paper2_intermediate_data/";
toolpath = "/usr4/ge646/zpzuo/tools/matlab/";
addpath(filepath1)
addpath(filepath2)
addpath(genpath(toolpath))
%% Load images (1km)
% Spatial reference
[lc, R] = readgeoraster('LC_byNLCD_1km.tif');
info = geotiffinfo('LC_byNLCD_1km.tif');
mstruct = geotiff2mstruct(info);

% Potential canopy top heights (PCTH), mean MCMC values, 1km
% Reference: 
%   pcth_mean_100 = readgeoraster("Ht_byAsrl_fgrp100_McMC_mean_1-1000_1km.tif"); pcth_mean_100(isnan(pcth_mean_100))=0; non0_100 = (pcth_mean_100~=0);
ftgs = [100,120,140,160,400,500,600,800,900];
for k = ftgs
    eval("pcth_mean_"+k+" = readgeoraster('Ht_byAsrl_fgrp"+k+"_McMC_mean_1-1000_1km.tif'); pcth_mean_"+k+"(isnan(pcth_mean_"+k+"))=0; non0_"+k+" = (pcth_mean_"+k+"~=0);");
end

% PCTH, standard deviations, 1km
% Reference:
%   pcth_std_100 = readgeoraster("Ht_byAsrl_fgrp100_McMC_std_1-1000_1km.tif"); pcth_std_100(~non0_100) = 0;
for k = ftgs
    eval("pcth_std_"+k+" = readgeoraster('Ht_byAsrl_fgrp"+k+"_McMC_std_1-1000_1km.tif'); pcth_std_"+k+"(~non0_"+k+") = 0;");
end

% Forest type groups (FTG), 1km
ftg = readgeoraster("Fgroup_byFIA_reproj5070_1km.tif");
% Forest age, 1km
fage = readgeoraster("Fage_1km_byBGI.tif");
% Environmental Site Potential (ESP), 1km
esp = readgeoraster("ESP_v140_byLandfire_1km.tif");
% Rasterized ecoregion map, 1km
ecor = readgeoraster("ecoRegion_L2_raster_1km_byEPA.tif");
% Potential FTG map, 1km
pftg = int32(readgeoraster("PotentialFTG_byESP_1km.tif")); 
% National Forest map, 1km
nf = readgeoraster(filepath2 + "PCTH_Eastern_US/auxillary_data/" + "NationalForest_raster_1km_byFIA.tif");
% GEDI L2A, 1km
gedi = readgeoraster("Ht_byGediL3_1km.tif");
% Lang's canopy height, 1km
lang = readgeoraster("Ht_byLang_1km_conus.tif");
% TreeMap canopy height, 1km
treemap = readgeoraster("Ht_byTreeMap_1km.tif");
% MetaWRI canopy height, 1km
metawri = readgeoraster("Ht_byMetaWri_1km.tif");
% Potapov canopy height, 1km
pota = readgeoraster("Ht_byPotapov_1km_conus.tif");
% Simard canopy height, 1km
simard = readgeoraster("Ht_bySimard_1km_conus.tif");

%% Mask the pcth images with mask scheme #1 and export
% Reference:
%   temp = pcth_mean_100; temp(temp==0|ftg~=100) = NaN;
%   geotiffwrite(filepath2+"Ht_byAsrl_fgrp"+100+"_McMC_mean_1-1000_maskS1_1km.tif", temp, R, "CoordRefSysCode","EPSG:5070", "TiffTags", struct("Compression", "LZW"))
for k = ftgs
    eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;");
    eval("geotiffwrite(filepath2+'Ht_byAsrl_fgrp"+k+"_McMC_mean_1-1000_maskS1_1km.tif', temp, R, 'CoordRefSysCode','EPSG:5070', 'TiffTags', struct('Compression', 'LZW'))");
end

%% Mask the pcth std images with mask scheme #1 and export
for k = 1:length(ftgs)
    eval("temp = pcth_std_"+ftgs(k)+";");
    eval("temp(temp==0|ftg~="+ftgs(k)+") = NaN;")
    geotiffwrite(filepath2 + "Ht_byAsrl_fgrp"+ftgs(k)+"_McMC_std_1-1000_maskS1_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode", "EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

%% Mask the pcth images with 1) mask scheme #1 & 2) fage>=80 and export
% Reference:
%   temp = pcth_mean_100; temp(temp==0|ftg~=100|fage<80) = NaN;
%   geotiffwrite(filepath2 + ...
%       "Ht_byAsrl_fgrp"+100+"_McMC_mean_1-1000_maskS1FageGte80"+".tif", ...
%       temp, ...
%       R, "CoordRefSysCode","EPSG:5070", ...
%       "TiffTags", struct("Compression", "LZW"))
for k = ftgs
    eval("temp = pcth_mean_"+k+";");
    eval("temp(temp==0|ftg~="+k+"|fage<80) = NaN;");
    geotiffwrite(filepath2 + ...
        "Ht_byAsrl_fgrp"+k+"_McMC_mean_1-1000_maskS1FageGte80_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

%% Compute relative deviation (RD) images without fage mask and export
%  Comparing with 4 references:
%       GEDI L3 (1km)
%       Lang et al 2023 (originally 10m)
%       Meta & WRI (originally 1m)
%       TreeMap (originally 30m)
%       Potapov (originally 30m)
for k = ftgs
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;")
    % temp = (temp - gedi) ./ gedi;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wGEDI_maskS1_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;")
    % temp = (temp - lang) ./ lang;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wLang_maskS1_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;")
    % temp = (temp - metawri) ./ metawri;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wTolan_maskS1_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;")
    % temp = (temp - treemap) ./ treemap;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wTreeMap_maskS1_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;")
    % temp = (temp - pota) ./ pota;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wPotapov_maskS1_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))

    eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+") = NaN;")
    temp = (temp - simard) ./ simard;
    geotiffwrite(filepath2 + ...
            "RelDev_FTG"+k+"_wSimard_maskS1_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

%% Compute relative deviation (RD) images with fage>=80 mask and export
%  Comparing with 5 references:
%       GEDI L3 (1km)
%       Lang et al 2023 (10m)
%       Meta & WRI (1m)
%       TreeMap (30m)
%       Potapov (30m)
for k = ftgs
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|fage<80) = NaN;")
    % temp = (temp - gedi) ./ gedi;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_fgrp"+k+"_wGedi_maskS1FageGte80_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|fage<80) = NaN;")
    % temp = (temp - lang) ./ lang;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_fgrp"+k+"_wLang_maskS1FageGte80_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|fage<80) = NaN;")
    % temp = (temp - metawri) ./ metawri;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_fgrp"+k+"_wMetaWri_maskS1FageGte80_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|fage<80) = NaN;")
    % temp = (temp - treemap) ./ treemap;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_fgrp"+k+"_wTreeMap_maskS1FageGte80_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))

    eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|fage<80) = NaN;")
    temp = (temp - simard) ./ simard;
    geotiffwrite(filepath2 + ...
            "RelDev_FTG"+k+"_wSimard_maskS1FageGte80_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

%% Compute relative deviation (RD) images with national forest mask and export
%  Comparing with 5 references:
%       GEDI L3 (1km)
%       Lang et al 2023 (10m)
%       Meta & WRI (1m)
%       TreeMap (30m)
%       Potapov (30m)
%       Simard (1km)
for k = ftgs
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|nf==0) = NaN;")
    % temp = (temp - gedi) ./ gedi;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wGEDI_maskS1NatlFor_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|nf==0) = NaN;")
    % temp = (temp - lang) ./ lang;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wLang_maskS1NatlFor_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|nf==0) = NaN;")
    % temp = (temp - metawri) ./ metawri;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wTolan_maskS1NatlFor_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|nf==0) = NaN;")
    % temp = (temp - treemap) ./ treemap;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wTreeMap_maskS1NatlFor_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
    % 
    % eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|nf==0) = NaN;")
    % temp = (temp - pota) ./ pota;
    % geotiffwrite(filepath2 + ...
    %         "RelDev_FTG"+k+"_wPotapov_maskS1NatlFor_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))

    eval("temp = pcth_mean_"+k+"; temp(temp==0|ftg~="+k+"|nf==0) = NaN;")
    temp = (temp - simard) ./ simard;
    geotiffwrite(filepath2 + ...
            "RelDev_FTG"+k+"_wSimard_maskS1NatlFor_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

%% Mask the pcth images with mask scheme #2 and export
fgrp_ecor = struct( ...
    "fgrp100", [1412,925], ...
    "fgrp120", [1556,982,925,964], ...
    "fgrp140", [2020], ...
    "fgrp160", [2158,2020,1598,1583,1604,2222,2224], ...
    "fgrp400", [2222,2224,2158,1598,1583,], ...
    "fgrp500", [1556,982,1552,968,969,2222,2224,1607,2158,1598,1583,1604,1585,1584,1580,1412,1469], ...
    "fgrp600", [297,2020,1598,1583], ...
    "fgrp800", [1556,982,1552,972,971,968,969,970,1607,1580,964,1469], ...
    "fgrp900", [964,1469,925,1412,1580]);
ecor_ftg = struct( ...
    "ecor1412", [100,500,900], ...
    "ecor925", [100,120,900], ...
    "ecor1556", [120,500,800], ...
    "ecor982", [120,500,800], ...
    "ecor964", [120,800,900], ...
    "ecor2020", [140,160,600], ... this also contains habitat of 600
    "ecor2158", [160,400,500], ...
    "ecor1598", [160,400,500], ... this also contains habitat of 600
    "ecor1583", [160,400,500], ... this also contains habitat of 600
    "ecor1604", [160,500], ...
    "ecor2222", [160,400,500], ...
    "ecor2224", [160,400,500], ...
    "ecor1552", [500,800], ...
    "ecor968", [500,800], ...
    "ecor969", [500,800], ...
    "ecor1607", [500,800], ...
    "ecor1585", [500], ...
    "ecor1584", [500], ...
    "ecor1580", [500,800,900], ...
    "ecor1469", [500,800,900], ...
    "ecor972", [800], ...
    "ecor971", [800], ...
    "ecor970", [800]);

non_restorable = ismember(lc, [0,11,12,21,22,23,24,31,81,82,95]);
for k = [100,120,140,160,400,500,800,900]
    eval("temp = pcth_mean_"+k+";");
    mask_ecor = ismember(ecor, getfield(fgrp_ecor, "fgrp"+num2str(k)));
    temp(temp==0|ftg==600|~mask_ecor|non_restorable) = NaN;
    % geotiffwrite(filepath2 + ...
    %         "Ht_byAsrl_fgrp"+k+"_McMC_mean_1-1000_maskS2_1km.tif", ...
    %     temp, ...
    %     R, "CoordRefSysCode","EPSG:5070", ...
    %     "TiffTags", struct("Compression", "LZW"))
end

temp = pcth_mean_600;
temp(temp==0|ftg~=600) = NaN;
% geotiffwrite(filepath2 + ...
%         "Ht_byAsrl_fgrp"+600+"_McMC_mean_1-1000_maskS2_1km.tif", ...
%     temp, ...
%     R, "CoordRefSysCode","EPSG:5070", ...
%     "TiffTags", struct("Compression", "LZW"))
%% Mask the pcth std images with mask scheme #2 and export
for k = [100,120,140,160,400,500,800,900]
    eval("temp = pcth_std_"+k+";");
    mask_ecor = ismember(ecor, getfield(fgrp_ecor, "fgrp"+num2str(k)));
    temp(temp==0|ftg==600|~mask_ecor|non_restorable) = NaN;
    geotiffwrite(filepath2 + ...
            "Ht_byAsrl_fgrp"+k+"_McMC_std_1-1000_maskS2_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

temp = pcth_std_600;
temp(temp==0|ftg~=600) = NaN;
geotiffwrite(filepath2 + ...
        "Ht_byAsrl_fgrp"+600+"_McMC_std_1-1000_maskS2_1km.tif", ...
    temp, ...
    R, "CoordRefSysCode","EPSG:5070", ...
    "TiffTags", struct("Compression", "LZW"))

%% Mask the pcth images with mask scheme #3 and export
for k = ftgs
    eval("temp = pcth_mean_"+k+";");
    temp(temp==0|pftg~=k|non_restorable) = NaN;
    geotiffwrite(filepath2 + ...
            "Ht_byAsrl_fgrp"+k+"_McMC_mean_1-1000_maskS3_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end

%% Mask the pcth std images with mask scheme #3 and export
for k = ftgs
    eval("temp = pcth_std_"+k+";");
    temp(temp==0|pftg~=k|non_restorable) = NaN;
    geotiffwrite(filepath2 + ...
            "Ht_byAsrl_fgrp"+k+"_McMC_std_1-1000_maskS3_1km.tif", ...
        temp, ...
        R, "CoordRefSysCode","EPSG:5070", ...
        "TiffTags", struct("Compression", "LZW"))
end
